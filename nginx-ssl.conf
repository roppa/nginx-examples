#number of cores
worker_processes  1;

#any connection processing directives go in events
events {
  #max number of simultaneous connections
	worker_connections  1024;
}

#The process id is a maximum 5 digit long unique id
pid 55555;

http {

	#set character encoding
	charset utf-8;

	#set the location of log files
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	#instead of explicitly adding mime types, include default file
	include mime.types;

	#if none of the mime types match, set default to a binary file as a fallback
	default_type application/octet-stream;

	#this uses a non-blocking aio module on linux/unix
	sendfile on;

	#how long to keep connection open
	keepalive_timeout 65;

	#don't send nginx server version
	server_tokens off;

	#allow gzip compression
	gzip on;

	server {

		#####################################################
		#TO INVESTIGATE
		#####################################################
		#ssl on;
		#ssl_protocols TLSv1 TLSv1.1 TSLv1.2;
		#ssl_ciphers '...';
		#####################################################


		#set port number to listen on
		listen 443 ssl;

		#your domain
		server_name localhost;

		#set root path, where nginx looks for files
		root /nginx/www;

		ssl_certificate /usr/local/etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /usr/local/etc/nginx/ssl/nginx.key;

		#location blocks

		#priority of ordering:
		#
		# 1. = exact matches
		# 2. ^~ preferential match
		# 3. ~ & *~ regex match
		# 4. prefix match
		#

		#prefix paths
		location / {
			index index.html index.htm;
		}

		location /home {
			rewrite ^ /index.html;
		}

		#downloads prefix - will match anything beginning with /downloads
		location /downloads {

			#log only downloads, parent access_log will be overridden
			access_log /var/log/nginx/download.log;

			#override parent gzip directive
			gzip off;

			#the downloads folder exists outside of /www so set it
			root /nginx;

			#tell nginx what to look for, if it can't find it do a 404
			try_files $uri = 404;

		}

		#use exact path match using '=' sign
		location = /humans.txt {

			#disable logs for this
			access_log off;
			error_log off;

			#can use return to set status code and content
			return 200 'Software engineer: Bob Johnson';

		}

		#can also do a regex (case sensitive) - optional plural
		#use *~ to make case insensitive
		location ~ /files? {

      root /nginx/www;

      try_files $uri = 404;

		}

		#prefix modifier (overrides the previous)
		location ^~ /file {

			root /nginx/www;

      try_files $uri = 404;

		}

		# Error pages
		error_page 404 /404.html;
		location = /404.html {
			root /nginx/www/errors;
		}

		error_page 500 502 503 504 /50x.html;
		location = /50x.html {
			root /nginx/www/errors;
		}

	}

	include servers/*;

}
